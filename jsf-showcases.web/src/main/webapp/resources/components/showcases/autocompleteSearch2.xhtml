<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:composite="http://java.sun.com/jsf/composite">

<!-- cc interface, i.e public attributes -->
<composite:interface>
    <!-- with JQuery UI -->
    <!-- Any Expression Language expression 
        that is referenced with #{cc.attrs.value} 
    -->
    <composite:attribute name="value" required="true" />
    <composite:attribute name="hints" required="true" />

    <!-- snippet=1 -->
    <composite:attribute name="render" required="false" default="" />
    <composite:attribute name="execute" required="false" default="" />
    <!-- endsnippet -->
    
    <composite:clientBehavior name="click" event="click" targets="search" />
</composite:interface>

<!-- cc implementation, i.e. usage of attributes -->
<composite:implementation>
    <h:inputText id="value" value="#{cc.attrs.value}" />
    <h:commandButton id="search" value="search" styleClass="btn btn-default"/>

    <h:inputHidden id="hints" value="#{cc.attrs.hints}" />

    <script type="text/javascript">
		/**
		 * replaces ':' characters with '\:'
		 */
		function id(id) {
			return id.replace(/:/g, '\\:')
		}

		/**
		 * @param acValueId - pure JSF id (no hashmark, unescaped ':')
		 * @param acHintsId - pure JSF id (no hashmark, unescaped ':')
		 */
		function initAutoComplete(acValueId, acHintsId, jsfAjaxParams) {
			var autoCompleteField = $(id("#"+acValueId));

			// initialize jquery autocomplete field
			autoCompleteField.autocomplete({
				// called on change of the autocomplete field
    			source : function(autoRequest, autoResponse) {
    
    				var jsfAjaxRequestProperties = {
    					// exeute calls setter, render calls getter
    					execute : acValueId + ' ' + (jsfAjaxParams.execute || ''),
    					render : acHintsId + ' ' + (jsfAjaxParams.render || ''),
    					onevent : function(ajaxEvent) {
    						if (ajaxEvent.status === "success") {
    							var autoCompleteHints = $(id("#"+acHintsId));
    
    							// autoCompleteHints is a list, val() provides the value of first element
    							var terms = autoCompleteHints.val();
    							var termsArray = terms.split(",");
    							autoResponse(termsArray);
    						}
    					},
    					onerror : function(ajaxEvent) {
                            autoResponse("request error");						
    					}
    				};
    
    				// create html event
    				var event = document.createEvent('HTMLEvents');
    				event.initEvent('change', true, true);
    
    				jsf.ajax.request(
    				   autoCompleteField,event,
    				   jsfAjaxRequestProperties);
    			}
			});
		}

		$(function() {
			initAutoComplete("#{cc.clientId}:value", "#{cc.clientId}:hints", 
					{execute : '#{cc.attrs.execute}', render : '#{cc.attrs.render}'});
		});
	</script>
</composite:implementation>
</html>